"Timestamp","Consent","Which IETF areas are you most active within?","Which IETF working groups are you most active within?","What is your highest level of educational attainment?","Is English your first language?","Did/do you study in an English-speaking environment?","Did/do you work in an English-speaking environment?","Which, if any, structured representation formats have you encountered in IETF documents?","Did they improve the utility of the document? In what way?","Have you authored any documents that have included structured representations?","Why/why not?","Do you think that the current level of adoption of these formats in standards documents is sufficient?","If not, what do you see as the barriers to adoption?","Notes","What are the benefits of the existing approach?","What are the limitations (beyond parsability)?","Tooling would require the use of a more structured representation when describing protocol data units. How should adoption of such an approach be encouraged?","Notes","What other tooling could use a more structured, precise protocol description?","What other structures could be inserted into documents, and what tooling could use them?","Notes"
"2018/11/06 9:46:45 AM GMT","I understand that my participation is voluntary and that I am free to withdraw at any time, without giving a reason;I understand that the data collected may be used in publications, presentations, a website, or in any format that this research is disseminated in;I agree that the anonymised data can be made publicly available after this research is complete;I am over 16 years old","art int rtg","avtcore","Master's degree","No","No","No","ABNF;XML;C code (or other programming language);TLS presentation language;YANG;MIB;ASCII packet header diagrams","Not really. Much more focus on the text. These things are ""nice to have"".","Yes","Only packet header diagrams. No need for others.","Yes","","","People have different workflows, being flexible in how these diagrams are written/generated is useful.","More structure/precision would benefit people whose first language isn't English. ","Good question. This will be difficult. Two approaches: (i) essentially require that a standard format is used, and (ii) make the benefit of a standard format clear, and people will inevitably use it.","","","",""
"2018/11/07 6:10:09 AM GMT","I understand that my participation is voluntary and that I am free to withdraw at any time, without giving a reason;I understand that the data collected may be used in publications, presentations, a website, or in any format that this research is disseminated in;I agree that the anonymised data can be made publicly available after this research is complete;I am over 16 years old","TSV, ART","MMUSIC, AVTCORE, QUIC, RTCWEB, TSVWG ","Master's degree","No","No","Yes","ABNF;XML;C code (or other programming language);YANG;MIB;State transition diagrams;ASCII packet header diagrams;Protocol sequence (ladder) diagrams","Stricter syntax , clearer definitions of possible inputs. Clearer grouping of related parameters,","Yes","To ensure syntax of headers, parameter was clear","No","Tools, lack of formal procedure descriptions. Learning curve involved in learning these languages, and knowing enough about them to make good use of them in documents.","Text-based protocols typically use ABNF, not a similar formalism for binary protocols. But: one would be useful, would help clarify ambiguities.","It exposes the logical layout, but would get this with a formal language.","Much of the complexity of the protocol is captured in English.","","Generating a parser automatically is difficult: for example, in QUIC, not possible to get at what the protocol is doing without analysing the English. Would make authoring slightly more difficult, but would ultimately give a better standard.","","",""
"2018/11/07 8:17:07 AM GMT","I understand that my participation is voluntary and that I am free to withdraw at any time, without giving a reason;I understand that the data collected may be used in publications, presentations, a website, or in any format that this research is disseminated in;I agree that the anonymised data can be made publicly available after this research is complete;I am over 16 years old","Transport, ART","RMCAT, QUIC, TAPS, HTTPbis, ALTO, MMUSIC, AVTCORE","Master's degree","No","Yes","Yes","C code (or other programming language);YANG;State transition diagrams;ASCII packet header diagrams;Protocol sequence (ladder) diagrams;SDP","Yes, to some extent. Sometimes the code can be quite cumbersome to understand. Definitely complementing, not replacing.","Yes","Complementing the text.","No","You are repeating yourself: you've already described it in English, you don't want to repeat yourself by describing it again in code. ","Might be good to write once (either in English, or in a formal language), and then generate the other. Avoid duplication, and the possibility of inconsistencies.","","","Depends on the type of draft that people are writing. If a technical document, describing an algorithm, then it becomes obvious that these kinds of tools are required. Does it make sense to have a textual description of the requirements, or not? Anything that makes the format","If it is complementary, then it makes sense. If not, then it doesn't make sense. Give the authors a tool that allows them to to specify some things, and generate a diagram, parser, from that. Again: want to avoid duplicate effort.

Being more structured is good for human readers too. Especially when there are multiple authors, more structure makes managing this easier. Example: ""Security Considerations"" section; enforced structure makes people think more about it.","","",""
"2018/11/08 6:56:35 AM GMT","I understand that my participation is voluntary and that I am free to withdraw at any time, without giving a reason;I understand that the data collected may be used in publications, presentations, a website, or in any format that this research is disseminated in;I agree that the anonymised data can be made publicly available after this research is complete;I am over 16 years old","art, ops","ntp, dnsop, httpbis, acme","High school/secondary school","Yes","Yes","Yes","ABNF;XML;ASN.1;C code (or other programming language);JSON;YANG;State transition diagrams;ASCII packet header diagrams;Protocol sequence (ladder) diagrams","If I could easily make sense of what was being represented, then yes.","No","Mostly sequence diagrams and sequence diagrams. Needed to be there for a high-level overview. Example request journey. For things that I've authored, documents have been relatively straightforward: no pseudocode or maths.","Yes","Yes/no. Drafts in particular with superfluous diagrams, mostly because the author has conflated protocol design and research output. In NTP space, doc with graph of research results. Again, same space: no packet diagram for the high level.","YANG and ASN.1 not easy to parse, so not generally helpful to begin with. Not generally a fan of pseudocode, but understands the point. Mixes alot of syntax from different language. Made languages not useful, not well specified.","For the packet diagram, having a visual representation (esp for bit alignment) is very useful, esp. for implementation. Bit shifts, erlang (bit syntax), knowing offsets is very useful. With English underneath, can get the context.","Expressing optional fields is a big challenge. Sometimes, where you've got some bytes that may or may not be set. Effectively representing variable length, or showing ""foreverness"". Showing the distinction between foreverness, and continuing to a defined point.","If I could control how RFCs were edited, then he'd fix the tooling. Could we take something like a YANG model, and use it to generate the ASCII format, English prose, parser code, etc. Say a protobuf/CBOR representation.","","Something that could validate other serialisation formats. Less concerned by the diagrams. Validating JSON, for example, would be beneficial. Validating XML against a DTD, again, very useful. Same for sequence diagrams, checking that all paths are reachable, no dead paths. ","Some applicability in introducing UML. SVG graphvis as a representation, can be parsed: can perform logic and analysis on it.","Whatever is built in the way of tools, needs to be coordinated with RFC Editor. Still finds it very difficult to get started in writing a draft spec. Should just be a script that people can just run. Don't want to worry about the tooling process. Current toolchain: markdown → xml → txt: bizarre. Don't want to have to worry about the bugs that might be introduced. 

Would also help for things like offline nits: let the user/editor take care of it offline."